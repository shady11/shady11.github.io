{"version":3,"file":"AutoCompose.js","sources":["../src/constants.js","../src/utils.js","../src/node-utils.js","../src/AutoCompose.js"],"sourcesContent":["// Invisible character\nexport const POSITIONER_CHARACTER = \"\\ufeff\";\n\nexport const FONT_PROPERTIES = [\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'fontStretch',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontFamily',\n\n    'textAlign',\n    'textTransform',\n    'textIndent',\n    'textDecoration',  // might not make a difference, but better be safe\n\n    'letterSpacing',\n    'wordSpacing',\n\n    'tabSize',\n    'MozTabSize',\n\n    'whiteSpace',\n    'wordWrap',\n    'wordBreak'\n];\n\nexport const HOST_PROPERTIES = [\n    ...FONT_PROPERTIES,\n    'direction',\n    'boxSizing',\n\n    'borderRightWidth',\n    'borderLeftWidth',\n\n    'paddingRight',\n    'paddingLeft',\n];\n\nexport const CLONE_PROPERTIES = [\n    ...HOST_PROPERTIES,\n    'width',\n\n    'overflowX',\n    'overflowY',\n\n    'borderTopWidth',\n    'borderBottomWidth',\n    'borderStyle',\n\n    'paddingTop',\n    'paddingBottom',\n\n    'lineHeight',\n];\n\nexport const FILLER = ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;';\n\nexport const INLINE_SUGGESTION_ID = '___autocompose_inline_suggestion___';\n","export const ensure = (context, object, keys) => {\n    [].concat(keys).forEach(key => {\n        if (typeof object[key] === 'undefined') {\n            throw new Error(`AutoCompose: Missing required parameter, ${context}.${key}`);\n        }\n    });\n};\n\nexport const ensureAnyOf = (context, object, keys) => {\n    let currentKey;\n    if (!keys.some(key => (\n        typeof object[currentKey = key] !== 'undefined'\n    ))) throw new Error(`AutoCompose: Missing required parameter, ${context}.${currentKey}`);\n};\n\nexport const ensureType = (context, object, key, type) => {\n    [].concat(object[key]).forEach(value => {\n        const valueType = typeof value;\n        if (valueType !== type && valueType !== 'undefined') {\n            throw new TypeError(`AutoCompose: Invalid Type for ${context}.${key}, expected ${type}`);\n        }\n    });\n};\n\nexport const getCursorPosition = input => {\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\n};\n\nexport const makeAsyncQueueRunner = () => {\n    let i = 0;\n    let queue = [];\n\n    return (f, j) => {\n        queue[j - i] = f;\n        while (queue[0]) ++i, queue.shift()();\n    };\n};\n\nexport const data = (element, key, value) => {\n    key = 'autosuggest_' + key;\n    if (typeof value !== 'undefined') {\n        element.dataset[key] = JSON.stringify(value);\n    } else {\n        value = element.dataset[key];\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\n    }\n};\n\nexport const getScrollbarWidth = () => {\n    // Creating invisible container\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll'; // forcing scrollbar to appear\n    outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n    document.body.appendChild(outer);\n\n    // Creating inner element and placing it in the container\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n\n    // Calculating difference between container's full width and the child width\n    const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n\n    // Removing temporary elements from the DOM\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n};\n","export const getGlobalOffset = $0 => {\n    let node = $0, top = 0, left = 0;\n\n    do {\n        left += node.offsetLeft;\n        top += node.offsetTop;\n    } while (node = node.offsetParent);\n\n    return { left, top };\n};\n\nexport const getSelectedTextNodes = () => {\n    const selection = window.getSelection();\n    if (!selection.isCollapsed) return {};\n\n    let { startContainer: node, startOffset: offset } = selection.getRangeAt(0);\n    if (node.nodeType !== node.TEXT_NODE) {\n        try {\n            node = getFirstChildNode(node.childNodes[offset]);\n            offset = 0;\n        } catch (e) {\n            try {\n                node = getLastChildNode(node.childNodes[offset - 1]);\n                offset = node.nodeValue ? node.nodeValue.length : null;\n            } catch(e) {}\n        }\n    }\n\n    return { node, offset };\n};\n\nexport const createNode = html => {\n    var div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstChild;\n};\n\nexport const getFirstChildNode = node => {\n    let nextNode = node;\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\n    return nextNode;\n};\n\nexport const getLastChildNode = node => {\n    let nextNode = node;\n    while (nextNode.lastChild) nextNode = nextNode.lastChild;\n    return nextNode;\n};\n\nexport const getNextNode = (node, root) => {\n    let nextNode;\n    if (node.nextSibling)\n        nextNode = node.nextSibling;\n    else {\n        nextNode = node.parentNode;\n        while (nextNode !== root && !nextNode.nextSibling)\n            nextNode = nextNode.parentNode;\n        if (nextNode && nextNode !== root)\n            nextNode = nextNode.nextSibling\n        else return;\n    }\n\n    return getFirstChildNode(nextNode);\n};\n\nexport const getPrevNode = (node, root) => {\n    let prevNode;\n    if (node.previousSibling)\n        prevNode = node.previousSibling;\n    else {\n        prevNode = node.parentNode;\n        while (prevNode !== root && !prevNode.previousSibling)\n            prevNode = prevNode.parentNode;\n        if (prevNode && prevNode !== root)\n            prevNode = prevNode.previousSibling\n        else return;\n    }\n\n    return getLastChildNode(prevNode);\n};\n\nexport const removeNodesBetween = (startContainer, endContainer) => {\n    if (startContainer === endContainer) return;\n    let node = getNextNode(startContainer);\n    while (node !== endContainer) {\n        node.parentNode.removeChild(node);\n        node = getNextNode(startContainer);\n    }\n};\n\nexport const getNodeValue = node => {\n    if (node.tagName && node.tagName === 'BR')\n        return '\\n';\n    return node.nodeValue || '';\n};\n\nexport const setSelection = callback => {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    callback(range);\n    selection.removeAllRanges();\n    selection.addRange(range);\n};","import { INLINE_SUGGESTION_ID } from './constants';\nimport { data, ensure, ensureType } from './utils';\nimport {\n    getSelectedTextNodes,\n    getNodeValue,\n    setSelection,\n    getPrevNode,\n    getNextNode,\n    createNode,\n} from './node-utils';\n\nclass AutoCompose {\n    constructor(options, ...inputs) {\n        if (!options)\n            throw new Error(`AutoCompose: Missing required parameter, options`);\n\n        if (typeof options === 'function')\n            options = { composer: options };\n\n        this.inputs = [];\n        this.onChange = options.onChange || Function.prototype;\n        this.onReject = options.onReject || Function.prototype;\n\n        ensure('AutoCompose', options, 'composer');\n        ensureType('AutoCompose', options, 'composer', 'function');\n        this.composer = options.composer;\n\n        events: {\n            const self = this;\n            let handledInKeyDown = false;\n            let activeElement = null;\n            let suggestionNode = null;\n            let activeSuggestion = null;\n\n            const clearSuggestion = normalize => {\n                const parentNode = suggestionNode.parentNode;\n                parentNode.removeChild(suggestionNode);\n                normalize && parentNode.normalize();\n                suggestionNode = activeSuggestion = activeElement = null;\n            };\n\n            const acceptSuggestion = ignoreCursor => {\n                const suggestion = suggestionNode.firstChild.nodeValue;\n                suggestionNode.parentNode.insertBefore(suggestionNode.firstChild, suggestionNode);\n                const insertedNode = suggestionNode.previousSibling;\n\n                this.onChange.call(activeElement, {\n                    suggestion: activeSuggestion,\n                    acceptedSuggestion: suggestion\n                });\n\n                clearSuggestion();\n                !ignoreCursor && setSelection(range => {\n                    range.setStartAfter(insertedNode);\n                    range.setEndAfter(insertedNode);\n                });\n            };\n\n            const rejectSuggestion = () => {\n                this.onReject.call(activeElement, { suggestion: activeSuggestion });\n                clearSuggestion();\n            };\n\n            const isSuggestionTextNode = node => node.parentNode === suggestionNode;\n            const isAfterSuggestionNode = node => {\n                while ((node = getPrevNode(node, activeElement)) && !isSuggestionTextNode(node));\n                return Boolean(node);\n            };\n\n            this.onBlurHandler = () => suggestionNode && clearSuggestion(true);\n            this.onKeyDownHandler = function (e) {\n                if (suggestionNode) {\n                    if (e.keyCode === 9 || e.keyCode === 39 || e.keyCode === 40) {\n                        acceptSuggestion();\n                        handledInKeyDown = true;\n                        e.preventDefault();\n                    }\n                }\n            };\n\n            let keyUpIndex = 0;\n            this.onKeyUpHandler = function (e) {\n                if (e.type === 'keyup' && handledInKeyDown) {\n                    handledInKeyDown = false;\n                    return;\n                }\n\n                let { node: textNode, offset } = getSelectedTextNodes();\n                if (!textNode) return suggestionNode && rejectSuggestion();\n\n                const isSuggestionNode = isSuggestionTextNode(textNode);\n                if (e.type === 'mouseup' && suggestionNode) {\n                    if (isSuggestionNode && offset) {\n                        textNode.nodeValue = textNode.nodeValue.slice(0, offset);\n                        return acceptSuggestion();\n                    } else if (isAfterSuggestionNode(textNode)) {\n                        return acceptSuggestion(true);\n                    }\n                }\n\n                if (isSuggestionNode) {\n                    try {\n                        textNode = getPrevNode(suggestionNode, this);\n                        offset = textNode.nodeValue.length;\n                    } catch(e) {\n                        textNode = getNextNode(suggestionNode, this);\n                        offset = 0;\n                    }\n                }\n\n                suggestionNode && rejectSuggestion();\n                if (textNode.nodeType !== textNode.TEXT_NODE) return;\n\n                postValue: {\n                    let postValue = textNode.nodeValue.slice(offset);\n                    if (postValue.trim()) return;\n\n                    let node = textNode;\n                    while (node = getNextNode(node, this)) {\n                        postValue += getNodeValue(node);\n                        if (postValue.trim()) return;\n                    }\n                }\n\n                let preValue = '';\n                preValue: {\n                    preValue = textNode.nodeValue.slice(0, offset);\n\n                    let node = textNode;\n                    while (node = getPrevNode(node, this)) {\n                        preValue = getNodeValue(node) + preValue;\n                    }\n                }\n\n                handlesuggestion: {\n                    keyUpIndex++;\n                    (asyncReference => {\n                        self.composer.call(this, preValue, result => {\n                            if (!result || asyncReference !== keyUpIndex) return;\n                            activeElement = this;\n\n                            const textAfterCursor = textNode.nodeValue.slice(offset);\n                            const parentNode = textNode.parentNode;\n                            const referenceNode = textNode.nextSibling;\n\n                            textNode.nodeValue = textNode.nodeValue.slice(0, offset);\n                            parentNode.insertBefore(document.createTextNode(textAfterCursor), referenceNode);\n\n                            activeSuggestion = result;\n                            suggestionNode = createNode(`<span>${result}</span>`);\n                            suggestionNode.style.opacity = 0.7;\n                            suggestionNode.id = INLINE_SUGGESTION_ID;\n                            parentNode.insertBefore(suggestionNode, referenceNode);\n\n                            setSelection(range => {\n                                range.setStartBefore(suggestionNode);\n                                range.setEndBefore(suggestionNode);\n                            });\n                        });\n                    })(keyUpIndex);\n                }\n            };\n        }\n\n        // initialize events on inputs\n        this.addInputs(...inputs);\n    }\n\n    addInputs(...args) {\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\n\n        inputs.forEach(input => {\n            // validate element\n           if (!input.isContentEditable) {\n                throw new Error('AutoCompose: Invalid input: only contenteditable elements are supported');\n            }\n\n            // init events\n            input.addEventListener('blur', this.onBlurHandler);\n            input.addEventListener('keyup', this.onKeyUpHandler);\n            input.addEventListener('mouseup', this.onKeyUpHandler);\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\n\n            data(input, 'index', this.inputs.push(input) - 1);\n        });\n    }\n\n    removeInputs(...args) {\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\n\n        inputs.forEach(input => {\n            const index = data(input, 'index');\n            if (!isNaN(index)) {\n                this.inputs.splice(index, 1);\n\n                // destroy events\n                input.removeEventListener('blur', this.onBlurHandler);\n                input.removeEventListener('keyup', this.onKeyUpHandler);\n                input.removeEventListener('mouseup', this.onKeyUpHandler);\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\n            }\n        });\n    }\n\n    destroy() {\n        this.removeInputs(this.inputs);\n    }\n}\n\nexport default AutoCompose;\n"],"names":["FONT_PROPERTIES","HOST_PROPERTIES","CLONE_PROPERTIES","INLINE_SUGGESTION_ID","ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","valueType","value","TypeError","data","element","dataset","JSON","stringify","parse","getSelectedTextNodes","selection","window","getSelection","isCollapsed","getRangeAt","node","startContainer","offset","startOffset","nodeType","TEXT_NODE","getFirstChildNode","childNodes","e","getLastChildNode","nodeValue","length","createNode","div","document","createElement","innerHTML","html","trim","firstChild","nextNode","lastChild","getNextNode","root","nextSibling","parentNode","getPrevNode","prevNode","previousSibling","getNodeValue","tagName","setSelection","range","createRange","removeAllRanges","addRange","AutoCompose","options","composer","inputs","onChange","Function","prototype","onReject","self","handledInKeyDown","activeElement","suggestionNode","activeSuggestion","clearSuggestion","removeChild","normalize","acceptSuggestion","suggestion","insertBefore","insertedNode","call","ignoreCursor","setStartAfter","setEndAfter","rejectSuggestion","isSuggestionTextNode","isAfterSuggestionNode","Boolean","onBlurHandler","onKeyDownHandler","keyCode","preventDefault","keyUpIndex","onKeyUpHandler","textNode","isSuggestionNode","slice","postValue","preValue","result","asyncReference","textAfterCursor","referenceNode","createTextNode","style","opacity","id","setStartBefore","setEndBefore","addInputs","args","Array","apply","map","d","input","isContentEditable","addEventListener","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}