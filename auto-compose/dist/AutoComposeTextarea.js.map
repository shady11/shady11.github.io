{"version":3,"file":"AutoComposeTextarea.js","sources":["../src/utils.js","../src/constants.js","../src/node-utils.js","../src/OverlaySuggestion.js","../src/AutoComposeTextarea.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\n    [].concat(keys).forEach(key => {\n        if (typeof object[key] === 'undefined') {\n            throw new Error(`AutoCompose: Missing required parameter, ${context}.${key}`);\n        }\n    });\n};\n\nexport const ensureAnyOf = (context, object, keys) => {\n    let currentKey;\n    if (!keys.some(key => (\n        typeof object[currentKey = key] !== 'undefined'\n    ))) throw new Error(`AutoCompose: Missing required parameter, ${context}.${currentKey}`);\n};\n\nexport const ensureType = (context, object, key, type) => {\n    [].concat(object[key]).forEach(value => {\n        const valueType = typeof value;\n        if (valueType !== type && valueType !== 'undefined') {\n            throw new TypeError(`AutoCompose: Invalid Type for ${context}.${key}, expected ${type}`);\n        }\n    });\n};\n\nexport const getCursorPosition = input => {\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\n};\n\nexport const makeAsyncQueueRunner = () => {\n    let i = 0;\n    let queue = [];\n\n    return (f, j) => {\n        queue[j - i] = f;\n        while (queue[0]) ++i, queue.shift()();\n    };\n};\n\nexport const data = (element, key, value) => {\n    key = 'autosuggest_' + key;\n    if (typeof value !== 'undefined') {\n        element.dataset[key] = JSON.stringify(value);\n    } else {\n        value = element.dataset[key];\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\n    }\n};\n\nexport const getScrollbarWidth = () => {\n    // Creating invisible container\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll'; // forcing scrollbar to appear\n    outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n    document.body.appendChild(outer);\n\n    // Creating inner element and placing it in the container\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n\n    // Calculating difference between container's full width and the child width\n    const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n\n    // Removing temporary elements from the DOM\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n};\n","// Invisible character\nexport const POSITIONER_CHARACTER = \"\\ufeff\";\n\nexport const FONT_PROPERTIES = [\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'fontStretch',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontFamily',\n\n    'textAlign',\n    'textTransform',\n    'textIndent',\n    'textDecoration',  // might not make a difference, but better be safe\n\n    'letterSpacing',\n    'wordSpacing',\n\n    'tabSize',\n    'MozTabSize',\n\n    'whiteSpace',\n    'wordWrap',\n    'wordBreak'\n];\n\nexport const HOST_PROPERTIES = [\n    ...FONT_PROPERTIES,\n    'direction',\n    'boxSizing',\n\n    'borderRightWidth',\n    'borderLeftWidth',\n\n    'paddingRight',\n    'paddingLeft',\n];\n\nexport const CLONE_PROPERTIES = [\n    ...HOST_PROPERTIES,\n    'width',\n\n    'overflowX',\n    'overflowY',\n\n    'borderTopWidth',\n    'borderBottomWidth',\n    'borderStyle',\n\n    'paddingTop',\n    'paddingBottom',\n\n    'lineHeight',\n];\n\nexport const FILLER = ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;';\n\nexport const INLINE_SUGGESTION_ID = '___autocompose_inline_suggestion___';\n","export const getGlobalOffset = $0 => {\n    let node = $0, top = 0, left = 0;\n\n    do {\n        left += node.offsetLeft;\n        top += node.offsetTop;\n    } while (node = node.offsetParent);\n\n    return { left, top };\n};\n\nexport const getSelectedTextNodes = () => {\n    const selection = window.getSelection();\n    if (!selection.isCollapsed) return {};\n\n    let { startContainer: node, startOffset: offset } = selection.getRangeAt(0);\n    if (node.nodeType !== node.TEXT_NODE) {\n        try {\n            node = getFirstChildNode(node.childNodes[offset]);\n            offset = 0;\n        } catch (e) {\n            try {\n                node = getLastChildNode(node.childNodes[offset - 1]);\n                offset = node.nodeValue ? node.nodeValue.length : null;\n            } catch(e) {}\n        }\n    }\n\n    return { node, offset };\n};\n\nexport const createNode = html => {\n    var div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstChild;\n};\n\nexport const getFirstChildNode = node => {\n    let nextNode = node;\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\n    return nextNode;\n};\n\nexport const getLastChildNode = node => {\n    let nextNode = node;\n    while (nextNode.lastChild) nextNode = nextNode.lastChild;\n    return nextNode;\n};\n\nexport const getNextNode = (node, root) => {\n    let nextNode;\n    if (node.nextSibling)\n        nextNode = node.nextSibling;\n    else {\n        nextNode = node.parentNode;\n        while (nextNode !== root && !nextNode.nextSibling)\n            nextNode = nextNode.parentNode;\n        if (nextNode && nextNode !== root)\n            nextNode = nextNode.nextSibling\n        else return;\n    }\n\n    return getFirstChildNode(nextNode);\n};\n\nexport const getPrevNode = (node, root) => {\n    let prevNode;\n    if (node.previousSibling)\n        prevNode = node.previousSibling;\n    else {\n        prevNode = node.parentNode;\n        while (prevNode !== root && !prevNode.previousSibling)\n            prevNode = prevNode.parentNode;\n        if (prevNode && prevNode !== root)\n            prevNode = prevNode.previousSibling\n        else return;\n    }\n\n    return getLastChildNode(prevNode);\n};\n\nexport const removeNodesBetween = (startContainer, endContainer) => {\n    if (startContainer === endContainer) return;\n    let node = getNextNode(startContainer);\n    while (node !== endContainer) {\n        node.parentNode.removeChild(node);\n        node = getNextNode(startContainer);\n    }\n};\n\nexport const getNodeValue = node => {\n    if (node.tagName && node.tagName === 'BR')\n        return '\\n';\n    return node.nodeValue || '';\n};\n\nexport const setSelection = callback => {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    callback(range);\n    selection.removeAllRanges();\n    selection.addRange(range);\n};","import { getScrollbarWidth } from './utils';\nimport { createNode, getGlobalOffset } from './node-utils';\nimport { POSITIONER_CHARACTER, HOST_PROPERTIES, FONT_PROPERTIES, FILLER } from './constants';\n\nlet scrollBarWidth;\n\nclass OverlaySuggestion {\n    constructor() {\n        if (scrollBarWidth === undefined)\n            scrollBarWidth = getScrollbarWidth();\n\n        this.isEmpty = true;\n        this.isActive = false;\n        this.suggestion = '';\n\n        this.host = document.createElement('div');\n        this.host.className = 'autocompose-overlay-suggestion';\n        this.host.style.zIndex = 9999;\n        this.host.style.cursor = 'text';\n        this.host.style.position = 'absolute';\n        this.host.style.borderColor = 'transparent';\n        this.host.style.backgroundColor = 'transparent';\n        this.host.style.overflow = 'hidden';\n        this.host.style.pointerEvents = 'none';\n\n        this.offset = document.createElement('div');\n        this.offset.appendChild(document.createTextNode(POSITIONER_CHARACTER));\n        this.offset.style.lineHeight = 1.5;\n\n        this.content = document.createElement('div');\n        this.content.style.lineHeight = '1px';\n\n        this.hide();\n        document.body.appendChild(this.host);\n        this.host.appendChild(this.offset);\n        this.host.appendChild(this.content);\n    }\n\n    show(position, element) {\n        if (position) {\n            const elementPosition = getGlobalOffset(element);\n            const elementStyles = window.getComputedStyle(element);\n\n            HOST_PROPERTIES.forEach(prop => {\n                this.host.style[prop] = elementStyles[prop];\n            });\n            this.host.style.left = `${elementPosition.left}px`;\n            this.host.style.top = `${position.top}px`;\n            this.host.style.height = `${parseFloat(elementStyles.height) - position.top + elementPosition.top}px`;\n            this.host.style.color = elementStyles.color;\n\n            const overlayWidth = parseFloat(elementStyles.width) - scrollBarWidth;\n            this.host.style.width = `${overlayWidth}px`;\n\n            const leftWidth = position.left - elementPosition.left -\n                parseFloat(elementStyles.paddingLeft || 0);\n            const rightWidth = overlayWidth - position.left + elementPosition.left -\n                parseFloat(elementStyles.paddingRight || 0);\n            let firstLineWidth = 0;\n            if (elementStyles.direction === 'ltr') {\n                this.offset.style.float = 'left';\n                this.offset.style.width = `${leftWidth}px`;\n                firstLineWidth = rightWidth;\n            } else {\n                this.offset.style.float = 'right';\n                this.offset.style.width = `${rightWidth}px`;\n                firstLineWidth = leftWidth;\n            }\n\n            const span = document.createElement('span');\n            span.style.whiteSpace = 'nowrap';\n            FONT_PROPERTIES.forEach(prop => {\n                span.style[prop] = elementStyles[prop];\n            });\n\n            span.appendChild(createNode('<span>&nbsp;</span>'));\n            span.firstChild.style.fontSize = '1px';\n\n            const textNode = document.createTextNode('');\n            span.appendChild(textNode);\n\n            document.body.appendChild(span);\n\n            let crossed = false, lastSpaceAt = -1;\n            const suggestionLength = this.suggestion.length;\n            for (let i = 0; i < suggestionLength; i++) {\n                if (!crossed) {\n                    const text = this.suggestion[i];\n                    if (/\\s/.test(text)) lastSpaceAt = i;\n                    textNode.nodeValue += this.suggestion[i];\n                    crossed = span.offsetWidth > firstLineWidth;\n                    if (crossed) {\n                        for (let j = lastSpaceAt + 2; j <= i; j++) {\n                            this.content.childNodes[j].style.lineHeight = elementStyles.lineHeight;\n                        }\n                    }\n                }\n                if (crossed) {\n                    this.content.childNodes[i + 1].style.lineHeight = elementStyles.lineHeight;\n                }\n            }\n            if (crossed) {\n                this.content.lastChild.style.lineHeight = elementStyles.lineHeight;\n            }\n            document.body.removeChild(span);\n        }\n\n        this.host.style.display = 'block';\n        this.isActive = true;\n    }\n\n    hide() {\n        this.host.style.display = 'none';\n        this.isActive = false;\n    }\n\n    empty() {\n        this.isEmpty = true;\n        while (this.content.firstChild)\n            this.content.removeChild(this.content.firstChild);\n    }\n\n    fill(suggestion, onSet) {\n        this.empty();\n        this.suggestion = suggestion;\n\n        this.content.appendChild(createNode('<span>&nbsp;</span>'));\n        this.content.firstChild.style.fontSize = '1px';\n\n        suggestion.split('').concat(FILLER).forEach((char, i) => {\n            const charNode = createNode(`<span>${char}</span>`);\n            charNode.style.opacity = 0.7;\n            charNode.style.lineHeight = 1.5;\n            charNode.style.pointerEvents = 'all';\n            this.content.appendChild(charNode);\n\n            charNode.addEventListener('mousedown', e => {\n                onSet(suggestion.slice(0, i + 1));\n                this.hide();\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        });\n\n        this.isEmpty = false;\n    }\n\n    getValue() {\n        return this.suggestion;\n    }\n}\n\nexport default OverlaySuggestion;\n","import { data, ensure, ensureType, getCursorPosition } from './utils';\nimport { POSITIONER_CHARACTER, CLONE_PROPERTIES } from './constants';\nimport { getGlobalOffset } from './node-utils';\nimport OverlaySuggestion from './OverlaySuggestion';\n\nfunction getCaretPosition(element) {\n    const [cursorPosition] = getCursorPosition(element);\n\n    // pre to retain special characters\n    const clone = document.createElement('pre');\n    clone.id = 'autocompose-positionclone';\n\n    const positioner = document.createElement('span');\n    positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\n\n    const computed = window.getComputedStyle(element);\n    CLONE_PROPERTIES.forEach(prop => {\n        clone.style[prop] = computed[prop];\n    });\n\n    const elementPosition = getGlobalOffset(element);\n    clone.style.opacity = 0;\n    clone.style.position = 'absolute';\n    clone.style.top = `${elementPosition.top}px`;\n    clone.style.left = `${elementPosition.left}px`;\n    document.body.appendChild(clone);\n\n    if (element.scrollHeight > parseInt(computed.height))\n        clone.style.overflowY = 'scroll';\n    else\n        clone.style.overflowY = 'hidden';\n\n    clone.appendChild(document.createTextNode(element.value.slice(0, cursorPosition)));\n    clone.appendChild(positioner);\n    clone.style.maxWidth = '100%';\n\n    const caretPosition = getGlobalOffset(positioner);\n    caretPosition.top -= element.scrollTop;\n    caretPosition.left -= element.scrollLeft;\n    document.body.removeChild(clone);\n    return caretPosition;\n}\n\nconst setValue = ({ element, suggestion, fullSuggestion, onChange }) => {\n    const [startPosition] = getCursorPosition(element);\n    const originalValue = element.value;\n    const value = originalValue.slice(0, startPosition) + suggestion;\n\n    element.value = value + originalValue.slice(startPosition);\n    element.focus();\n\n    const cursorPosition = value.length;\n    element.setSelectionRange(cursorPosition, cursorPosition);\n    onChange({ suggestion: fullSuggestion, acceptedSuggestion: suggestion });\n};\n\nclass AutoComposeTextarea {\n    constructor(options, ...inputs) {\n        if (!options) {\n            throw new Error(`AutoCompose Textarea: Missing required parameter, options`);\n        }\n\n        if (typeof options === 'function')\n            options = { composer: options };\n\n        this.inputs = [];\n        this.suggestion = new OverlaySuggestion();\n        this.onChange = options.onChange || Function.prototype;\n        this.onReject = options.onReject || Function.prototype;\n\n        ensure('AutoCompose Textarea', options, 'composer');\n        ensureType('AutoCompose Textarea', options, 'composer', 'function');\n        this.composer = options.composer;\n\n        events: {\n            const self = this;\n            let handledInKeyDown = false;\n\n            this.onBlurHandler = function () {\n                self.suggestion.hide();\n            };\n\n            this.onKeyDownHandler = function (e) {\n                if (self.suggestion.isActive) {\n                    if (e.keyCode === 9 || e.keyCode === 39 || e.keyCode === 40) {\n                        const fullSuggestion = self.suggestion.getValue();\n                        setValue({\n                            element: this,\n                            fullSuggestion,\n                            suggestion: fullSuggestion,\n                            onChange: self.onChange.bind(this)\n                        });\n\n                        self.suggestion.hide();\n                        handledInKeyDown = true;\n                        e.preventDefault();\n                    }\n                }\n            };\n\n            let keyUpIndex = 0;\n            this.onKeyUpHandler = function (e) {\n                if (handledInKeyDown) {\n                    handledInKeyDown = false;\n                    return;\n                }\n\n                if (self.suggestion.isActive) {\n                    self.suggestion.hide();\n                    self.onReject({ suggestion: self.suggestion.getValue() });\n                }\n\n                const [startPosition, endPosition] = getCursorPosition(this);\n                if (startPosition !== endPosition) return;\n\n                const postValue = this.value.slice(startPosition);\n                if (postValue.trim()) return;\n                const preValue = this.value.slice(0, startPosition);\n\n                handlesuggestion: {\n                    keyUpIndex++;\n\n                    const caretPosition = getCaretPosition(this);\n                    (asyncReference => {\n                        self.composer.call(this, preValue, result => {\n                            if (!result || asyncReference !== keyUpIndex) return;\n\n                            self.suggestion.fill(result, suggestion => {\n                                setValue({\n                                    element: this,\n                                    suggestion: suggestion,\n                                    fullSuggestion: result,\n                                    onChange: self.onChange.bind(this)\n                                });\n                            });\n\n                            self.suggestion.show(caretPosition, this);\n                        });\n                    })(keyUpIndex);\n                }\n            };\n        }\n\n        // initialize events on inputs\n        this.addInputs(...inputs);\n    }\n\n    addInputs(...args) {\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\n\n        inputs.forEach(input => {\n            // validate element\n            if (input.tagName !== 'TEXTAREA') {\n                throw new Error('AutoCompose Textarea: Invalid input: only textarea elements are supported');\n            }\n\n            // init events\n            input.addEventListener('blur', this.onBlurHandler);\n            input.addEventListener('keyup', this.onKeyUpHandler);\n            input.addEventListener('mouseup', this.onKeyUpHandler);\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\n\n            data(input, 'index', this.inputs.push(input) - 1);\n        });\n    }\n\n    removeInputs(...args) {\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\n\n        inputs.forEach(input => {\n            const index = data(input, 'index');\n            if (!isNaN(index)) {\n                this.inputs.splice(index, 1);\n\n                // destroy events\n                input.removeEventListener('blur', this.onBlurHandler);\n                input.removeEventListener('keyup', this.onKeyUpHandler);\n                input.removeEventListener('mouseup', this.onKeyUpHandler);\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\n            }\n        });\n    }\n\n    destroy() {\n        this.removeInputs(this.inputs);\n    }\n}\n\nexport default AutoComposeTextarea;\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","valueType","value","TypeError","getCursorPosition","input","selectionStart","selectionEnd","sort","a","b","data","element","dataset","JSON","stringify","parse","getScrollbarWidth","outer","document","createElement","style","visibility","overflow","msOverflowStyle","body","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","POSITIONER_CHARACTER","FONT_PROPERTIES","HOST_PROPERTIES","CLONE_PROPERTIES","FILLER","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","createNode","div","innerHTML","html","trim","firstChild","scrollBarWidth","OverlaySuggestion","undefined","isEmpty","isActive","suggestion","host","className","zIndex","cursor","position","borderColor","backgroundColor","pointerEvents","offset","createTextNode","lineHeight","content","hide","elementPosition","elementStyles","window","getComputedStyle","prop","height","parseFloat","color","overlayWidth","width","leftWidth","paddingLeft","rightWidth","paddingRight","firstLineWidth","direction","float","span","whiteSpace","fontSize","textNode","crossed","lastSpaceAt","suggestionLength","length","i","text","test","nodeValue","j","childNodes","lastChild","display","onSet","empty","split","char","charNode","opacity","addEventListener","slice","preventDefault","stopPropagation","getCaretPosition","cursorPosition","clone","id","positioner","computed","scrollHeight","parseInt","overflowY","maxWidth","caretPosition","scrollTop","scrollLeft","setValue","fullSuggestion","onChange","startPosition","originalValue","focus","setSelectionRange","acceptedSuggestion","AutoComposeTextarea","options","composer","inputs","Function","prototype","onReject","self","handledInKeyDown","onBlurHandler","onKeyDownHandler","e","keyCode","getValue","bind","keyUpIndex","onKeyUpHandler","endPosition","postValue","preValue","call","result","asyncReference","fill","show","addInputs","args","Array","apply","map","d","tagName","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}